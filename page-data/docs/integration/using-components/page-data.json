{"componentChunkName":"component---src-templates-documentation-page-jsx","path":"/docs/integration/using-components","webpackCompilationHash":"be5da0babf81c7f14879","result":{"data":{"markdown":{"html":"<h1 id=\"application-setup\"><a href=\"#application-setup\" aria-label=\"application setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application setup</h1>\n<p>Components authored with x-dash are authored using <a href=\"https://jasonformat.com/wtf-is-jsx/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSX</a> and are designed to be compatible with a variety of runtimes to make integrating them into your application as flexible as possible. They can be used with any React-like library, such as Preact or Inferno, or rendered statically. They can also be integrated with Handlebars using the <a href=\"/x-dash/packages/x-handlebars\">x-handlebars package</a>.</p>\n<h2 id=\"choosing-a-runtime\"><a href=\"#choosing-a-runtime\" aria-label=\"choosing a runtime permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Choosing a runtime</h2>\n<p>There are a number of JavaScript tools and frameworks which support JSX. The most well known of these is <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a> and its derivitives including <a href=\"https://preactjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Preact</a> and <a href=\"https://infernojs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Inferno</a>. These tools all implement a similar feature set for rendering interactive interfaces. There are also tools able to render JSX to static HTML such as <a href=\"https://github.com/i-like-robots/hyperons\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hyperons</a> and <a href=\"https://www.npmjs.com/package/vdo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VDO</a> which may be a good choice when integrating x-dash components into an existing server-side rendered app.</p>\n<p>When building interactive interfaces for the client-side it is recommended to use Preact as this is already in use around the FT. For rendering static HTML on the server it is recommended to use Hyperons because it has excellent performance.</p>\n<h2 id=\"installing-components\"><a href=\"#installing-components\" aria-label=\"installing components permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing components</h2>\n<p>Components should be installed and added to your application's dependencies using <a href=\"https://npmjs.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">npm</a>. For example, to install the <a href=\"/x-dash/components/x-teaser\">x-teaser component</a> you would run:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save @financial-times/x-teaser</code></pre></div>\n<p><em>Please note: Remember that you will also need to install your chosen runtime!</em></p>\n<h2 id=\"configuration\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>Because x-dash components cannot interface with the runtime directly a consolidation library named <a href=\"/x-dash/packages/x-engine\">x-engine</a> is used to connect them. You must provide x-engine with some configuration added to your application's <code class=\"language-text\">package.json</code> to instruct it how to load the runtime. For example to use the Hyperons module to render x-dash components on the server you may add this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"x-dash\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"engine\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hyperons\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Please refer to the the <a href=\"/x-dash/packages/x-engine\">x-engine documentation</a> for further configuration information.</p>\n<h2 id=\"rendering\"><a href=\"#rendering\" aria-label=\"rendering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rendering</h2>\n<p>JSX source code is transpiled to a set of function calls for each element. These function calls will usually output a framework specific representation of each element which builds up a data structure describing what to render. Whichever runtime you choose it will provide a method to transform this data structure into HTML. You must call this render method yourself in your application.</p>\n<p>For example, if you are using React you may render an x-dash component like this in your client-side code:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> React <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ReactDOM <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Teaser <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@financial-times/x-teaser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Teaser</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>Hello world<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#target'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can also access the x-engine package directly in your own code which may be convenient if you think you may change the runtime in future. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@financial-times/x-engine'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Teaser <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@financial-times/x-teaser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// JSX syntax is sugar for function calls so it is not required!</span>\n<span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">Teaser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"use-component-presets\"><a href=\"#use-component-presets\" aria-label=\"use component presets permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use component presets</h3>\n<p>Components which have many configigurable properties may expose a collection <code class=\"language-text\">presets</code> which are groups of ready configured properties for common use-cases. These can be mixed into your existing data properties to make your code less repetitive.</p>\n<p>For example the x-teaser component can be configured in many different ways and <a href=\"/x-dash/components/x-teaser#presets\">includes several presets</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Teaser<span class=\"token punctuation\">,</span> presets <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@financial-times/x-teaser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">Teaser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>presets<span class=\"token punctuation\">.</span>Hero<span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>teaserData<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","headings":[{"value":"Application setup","depth":1},{"value":"Choosing a runtime","depth":2},{"value":"Installing components","depth":2},{"value":"Configuration","depth":2},{"value":"Rendering","depth":2},{"value":"Use component presets","depth":3}]},"menu":{"edges":[{"node":{"title":"Get started","items":[{"title":"What is x-dash?","link":"/docs/get-started/what-is-x-dash"},{"title":"Installation","link":"/docs/get-started/installation"},{"title":"Working with x-dash","link":"/docs/get-started/working-with-x-dash"}]}},{"node":{"title":"Components in-depth","items":[{"title":"Overview","link":"/docs/components/overview"},{"title":"Creating components","link":"/docs/components/creation"},{"title":"JavaScript","link":"/docs/components/javascript"},{"title":"Styling","link":"/docs/components/styling"},{"title":"Stories","link":"/docs/components/stories"},{"title":"Interactions","link":"/docs/components/interactions"},{"title":"Testing","link":"/docs/components/testing"}]}},{"node":{"title":"Integrating x-dash","items":[{"title":"Using components","link":"/docs/integration/using-components"},{"title":"Local development","link":"/docs/integration/local-development"}]}},{"node":{"title":"Guides","items":[{"title":"Migrating to x-teaser","link":"/docs/guides/migrating-to-x-teaser"}]}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"type":"documentation-page","source":"docs","title":"Application setup"}}}