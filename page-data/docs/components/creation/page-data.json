{"componentChunkName":"component---src-templates-documentation-page-jsx","path":"/docs/components/creation","result":{"data":{"markdown":{"html":"<h1 id=\"creating-components\" style=\"position:relative;\"><a href=\"#creating-components\" aria-label=\"creating components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating components</h1>\n<p>To create a new component, you can start by running the <code class=\"language-text\">blueprint</code> script and providing a component name. This script will initialise a skeleton component with the required files including a readme, package manifest and basic source files.</p>\n<p>You can run the blueprint script from the repository root like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">npm run blueprint -- denshiba</code></pre></div>\n<p><em>Please note: You do not need to prefix the component name with <code class=\"language-text\">x-</code>.</em></p>\n<p>When the blueprint script runs it will initialise a new component with the following file structure:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">├ src/\n│  └ Denshiba.jsx\n├ stories/\n│  ├ story.js\n│  └ index.js\n├ .npmignore\n├ package.json\n├ readme.md\n└ rollup.js</code></pre></div>\n<p>All JavaScript and CSS source files should be stored in the <code class=\"language-text\">src</code> directory, Storybook configuration for the component must be maintained in the <code class=\"language-text\">stories</code> directory. Every package in x-dash must have a readme and a package manifest and public packages must include a <code class=\"language-text\">.npmignore</code> file.</p>","headings":[{"value":"Creating components","depth":1}]},"menu":{"edges":[{"node":{"title":"Get started","items":[{"title":"What is x-dash?","link":"/docs/get-started/what-is-x-dash"},{"title":"Installation","link":"/docs/get-started/installation"},{"title":"Working with x-dash","link":"/docs/get-started/working-with-x-dash"}]}},{"node":{"title":"Components in-depth","items":[{"title":"Overview","link":"/docs/components/overview"},{"title":"Creating components","link":"/docs/components/creation"},{"title":"JavaScript","link":"/docs/components/javascript"},{"title":"Styling","link":"/docs/components/styling"},{"title":"Stories","link":"/docs/components/stories"},{"title":"Interactions","link":"/docs/components/interactions"},{"title":"Testing","link":"/docs/components/testing"}]}},{"node":{"title":"Integrating x-dash","items":[{"title":"Using components","link":"/docs/integration/using-components"},{"title":"Local development","link":"/docs/integration/local-development"}]}},{"node":{"title":"Guides","items":[{"title":"Migrating to x-teaser","link":"/docs/guides/migrating-to-x-teaser"}]}}]}},"pageContext":{"type":"documentation-page","source":"docs","title":"Creating components"}},"staticQueryHashes":[]}